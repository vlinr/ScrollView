var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var ScrollView_1 = require("./ScrollView");
var Main = /** @class */ (function () {
    function Main() {
        // 鼠标按下
        this.mouseDownEvent = false;
        // 鼠标移动速度
        this.mouseSpeed = 0;
        this.mouseStartEventX = 0; //鼠标开始位置
        this.curMoveFrame = 0;
        this.itemMaxScale = 1; //最大缩放比
        this.itemMinScale = .6; //最小缩放比
        this.startX = 0; //记录开始位置
        this.mouseDownEventOpen = true; //是否开始点击
        this.deviation = false; //是否偏离
        this.mouseEventX = 0;
        console.log('%chttp://www.this1.cn/ | Email:zlife@vip.qq.com | Keen | HTML5', 'font-size:14px;background: linear-gradient(to right, red, blue); -webkit-background-clip: text;color: transparent;');
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        Laya.stage.bgColor = '#fff';
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        //使用ScrollView
        this.scrollView = new ScrollView_1.default(); //实例化列表
        Laya.stage.addChild(this.scrollView);
        //启动侦听器，自动回笼中间元素
        Laya.timer.frameLoop(1, this, this.onUpdate);
        //生成数据源
        var array = [];
        for (var i = 0; i < 10; ++i) {
            // array.push('zs.png');
            var sp = new Laya.Sprite();
            sp.loadImage('zs.png');
            sp.width = 300;
            sp.height = 300;
            if (i % 2 == 0)
                sp.price = '分享获得';
            else if (i % 5 == 0)
                sp.price = '看视频获得';
            else
                sp.price = 1000;
            //此处传递的是一个对象
            array.push(sp);
        }
        this.btmBye(); //添加购买按钮
        this.scrollView.setArray = array; //设置数据源//这里调用的是setter方法
        this.initScrollView(); //初始化信息
        this.scrollView.setRenderHandler = new Laya.Handler(this, this.onScrollRender);
        this.scrollView.setMouseHandler = new Laya.Handler(this, this.onScrollMouse);
        this.centeringControl(0); //设置第一个居中
        this.updateScale(0); //设置第一个缩放
    };
    //设置自动居中效果
    Main.prototype.onUpdate = function () {
        if (!this.mouseDownEvent && this.mouseSpeed != 0) {
            var direction = Math.abs(this.mouseSpeed) / this.mouseSpeed;
            var absSpeed = Math.sqrt(Math.abs(this.mouseSpeed));
            var moveDis = this.mouseSpeed;
            this.updateScrollViewPos(moveDis);
            this.updateScale();
            absSpeed = absSpeed - 0.3;
            if (absSpeed < 1) {
                absSpeed = 0;
                this.mouseSpeed = 0;
                // 居中显示 
                this.centeringControl();
            }
            else {
                this.mouseSpeed = absSpeed * absSpeed * direction;
            }
        }
    };
    //渲染的时候更新，绑定点击事件
    Main.prototype.onScrollRender = function (cell, index) {
        var _this = this;
        // console.log(cell,index)
        if (this.mouseDownEventOpen) {
            cell.on(Laya.Event.CLICK, this, function (e) {
                if (!_this.deviation) {
                    //鼠标是否在原位置
                    console.log('CLICK ME！');
                }
            });
        }
    };
    //自定义滚动
    /**
    * ScrollView鼠标操作响应
    * @param e
    */
    Main.prototype.onScrollMouse = function (e) {
        // 移动ScrollView时其中单元格缩放
        if (e.type == Laya.Event.MOUSE_DOWN) {
            this.mouseDown();
        }
        else if (e.type == Laya.Event.MOUSE_UP) {
            this.mouseUp();
        }
        else if (e.type == Laya.Event.MOUSE_MOVE) {
            this.mouseMove();
        }
    };
    /**
     * 鼠标按下响应事件
     */
    Main.prototype.mouseDown = function () {
        this.deviation = false;
        this.mouseDownEvent = true;
        this.mouseStartEventX = Laya.MouseManager.instance.mouseX;
        this.mouseEventX = Laya.MouseManager.instance.mouseX;
    };
    /**
     * 鼠标抬起响应事件
     */
    Main.prototype.mouseUp = function () {
        if (!this.mouseDownEvent) {
            return;
        }
        var stableFrame = Laya.timer.currFrame - this.curMoveFrame;
        // 滑动
        if (stableFrame > 2) {
            this.mouseSpeed = 0;
            this.centeringControl();
        }
        this.mouseDownEvent = false;
    };
    /**
     * 鼠标移动事件响应
     */
    Main.prototype.mouseMove = function () {
        if (this.mouseDownEvent) {
            this.deviation = true;
            var dis = Laya.MouseManager.instance.mouseX - this.mouseEventX;
            this.mouseEventX = Laya.MouseManager.instance.mouseX;
            this.updateScrollViewPos(dis);
            this.updateScale();
            this.curMoveFrame = Laya.timer.currFrame;
            this.mouseSpeed = dis;
        }
    };
    /**
    * 调整图像大小
    */
    //更新缩放，设置元素缩放
    Main.prototype.updateScale = function (startNum) {
        if (startNum === void 0) { startNum = -1; }
        var centerIndex = startNum == -1 ? this.getScreenCenterCellIndex() : startNum;
        var leftIndex = Math.max(centerIndex - 1, 0);
        var rightIndex = Math.min(centerIndex + 1, this.scrollView.array.length - 1);
        var scrollPosX = this.scrollView.x;
        var centerPos = Laya.stage.width / 2 - scrollPosX;
        for (var index = leftIndex; index <= rightIndex; index++) {
            var cellPos = this.scrollView.getCellPosByIndex(index);
            var cellDis = Math.abs(cellPos - centerPos);
            if (cellDis < 180) {
                var scaleRate = this.itemMaxScale - (this.itemMaxScale - this.itemMinScale) / 180 * cellDis;
                var item = this.scrollView.getItemByIndex(index);
                item.alpha = 1; //选中状态，中间元素
                item.scale(scaleRate, scaleRate);
                // console.log(item)
                this.setByeText(item._children[0].price); //获取自定义属性
            }
            else {
                var item = this.scrollView.getItemByIndex(index);
                item.graphics.clear();
                item.alpha = .2; //设置很透明
                item != undefined && item != null && Laya.Tween.to(item, {
                    scaleX: .4,
                    scaleY: .4
                }, 0, Laya.Ease.linearInOut);
            }
        }
    };
    //获取屏幕中间的单元格
    Main.prototype.getScreenCenterCellIndex = function () {
        var distance = -this.scrollView.x;
        var index = (distance - this.scrollView.spaceLeft + this.scrollView.space + (Laya.stage.width + this.scrollView.cellWidth) / 2) / (this.scrollView.cellWidth + this.scrollView.space);
        return Math.round(index) - 1;
    };
    /**
    * 将角色居中显示
    *	startNum:设置哪个角色居中，默认不设置
    */
    Main.prototype.centeringControl = function (sartNum) {
        if (sartNum === void 0) { sartNum = -1; }
        var centerIndex = sartNum == -1 ? this.getScreenCenterCellIndex() : sartNum;
        var cellPosX = this.getCellPosByIndex(centerIndex);
        var posX = Laya.stage.width / 2 - cellPosX;
        if (sartNum == -1)
            Laya.Tween.to(this.scrollView, { x: posX }, 500, Laya.Ease.cubicOut).update = new Laya.Handler(this, this.updateScale);
        else {
            this.scrollView.x = posX;
            this.startX = posX;
        }
    };
    /**
    * 根据单元格索引获取单元格位置
    * @param index
    */
    Main.prototype.getCellPosByIndex = function (index) {
        return this.scrollView.spaceLeft + (index + 0.5) * this.scrollView.cellWidth + index * this.scrollView.space;
    };
    //初始化信息
    Main.prototype.initScrollView = function () {
        // this.scrollView.setSpaceLeft = 100;
        // this.scrollView.setSpaceRight = 100;
        this.scrollView.space = 50; //设置左右间距
        this.scrollView.setCellWidth = 300; //方块的宽高
        this.scrollView.setCellHeight = 300;
        this.scrollView.setItemRender = Item; //渲染类
        this.scrollView.height = 300; //view的高度
        this.scrollView.pos(0, 200); //位置
    };
    /**
     * 设置元素滚动
     * dis:距离
     * ***/
    Main.prototype.updateScrollViewPos = function (dis) {
        var posX = dis + this.scrollView.x;
        if (posX > this.startX) { //开始的位置 0位置，如果需要其他位置，自行调试
            posX = this.startX;
        }
        var posEnd = Laya.stage.width / 2 - this.getCellPosByIndex(this.scrollView.array.length - 1);
        if (posX < posEnd) { //结束的位置
            posX = posEnd;
        }
        this.scrollView.pos(posX, this.scrollView.y);
    };
    //增加下方购买按钮
    Main.prototype.btmBye = function () {
        var byeBtn = new Laya.Sprite();
        byeBtn.loadImage('byebtn.png');
        byeBtn.width = 233;
        byeBtn.height = 122;
        byeBtn.pos((Laya.stage.width - byeBtn.getBounds().width) / 2, (Laya.stage.height - byeBtn.getBounds().height) / 2);
        this.byeText = new Laya.Text();
        this.byeText.width = byeBtn.getBounds().width;
        this.byeText.align = 'center';
        this.byeText.fontSize = 40;
        this.byeText.color = '#fff';
        this.byeText.text = "";
        this.byeText.pos(0, (122 - 40) / 2);
        byeBtn.addChild(this.byeText);
        Laya.stage.addChild(byeBtn);
        byeBtn.on(Laya.Event.CLICK, this, function (e) {
            var target = e.target;
            console.log('购买价格', target.price);
        });
    };
    //更新内容
    Main.prototype.setByeText = function (str) {
        this.byeText.text = "" + str;
        Object.defineProperty(this.byeText.parent, 'price', {
            writable: true,
            value: typeof str == 'number' ? str : -1
        });
    };
    return Main;
}());
var Item = /** @class */ (function (_super) {
    __extends(Item, _super);
    function Item(w, h) {
        var _this = _super.call(this) || this;
        _this.pivot(w / 2, h / 2); //设置居中
        _this.size(w, h);
        return _this;
    }
    Object.defineProperty(Item.prototype, "setImage", {
        set: function (url) {
            this.sprite.loadImage(url);
        },
        enumerable: true,
        configurable: true
    });
    return Item;
}(Laya.Box));
//激活启动类
new Main();
},{"./GameConfig":1,"./ScrollView":3}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//自定义滚动类，继承BOX，并实现IRedner以及IItem接口
var ScrollView = /** @class */ (function (_super) {
    __extends(ScrollView, _super);
    function ScrollView() {
        var _this = _super.call(this) || this;
        /*****记录是否有已经渲染过单元格了******/
        _this.haveRender = false;
        _this.haveInit = false;
        _this.haveInitItem = false;
        //鼠标抬起后，是否继续滑动单元格
        _this.sensitive = true;
        //左右边距
        _this.spaceLeft = 0;
        _this.spaceRight = 0;
        //单元格之间间距
        _this.space = 0;
        _this.mouseEnabled = true;
        //初始化鼠标事件
        _this.on(Laya.Event.MOUSE_DOWN, _this, _this.mouseDown);
        _this.on(Laya.Event.MOUSE_UP, _this, _this.mouseUp, [Laya.Event.MOUSE_UP]); //正常的抬起
        _this.on(Laya.Event.MOUSE_MOVE, _this, _this.mouseMove);
        _this.on(Laya.Event.MOUSE_OUT, _this, _this.mouseUp, [Laya.Event.MOUSE_OUT]); //离开后抬起
        return _this;
    }
    //初始化单元格数据
    ScrollView.prototype.init = function () {
        if (!this.haveInit) {
            // 初始化单元格
            this.initItems();
            // 初始化渲染
            this.initRender();
            if (this.haveInitItem && this.haveRender) {
                this.haveInit = true;
            }
        }
    };
    Object.defineProperty(ScrollView.prototype, "setArray", {
        //设置数据源接口
        set: function (array) {
            this.array = array;
            //设置完数据以后，从新渲染一次
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "getArray", {
        //获取数据源
        get: function () {
            return this.array;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setItemRender", {
        //设置单元格渲染
        set: function (itemRender) {
            this.itemRender = itemRender; //设置完单元格数据以后，在进行初始化一次
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setRenderHandler", {
        //设置单元格处理器
        set: function (hander) {
            this.renderHandler = hander;
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setMouseHandler", {
        //设置鼠标处理器
        set: function (hander) {
            this.mouseHandler = hander;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setSelectHandler", {
        //设置选中处理器
        set: function (hander) {
            this.selectHandler = hander;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setCellWidth", {
        //设置单元格的宽度，高度，设置左边距右边距，获取宽度高度左边距右边距
        set: function (cellWidth) {
            this.cellWidth = cellWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "getCellWidth", {
        get: function () {
            return this.cellWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setCellHeight", {
        set: function (cellHeight) {
            this.cellHeight = cellHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "getCellHeight", {
        get: function () {
            return this.cellHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setSpaceLeft", {
        set: function (spaceLeft) {
            this.spaceLeft = spaceLeft;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "getSpaceLeft", {
        get: function () {
            return this.spaceLeft;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "setSpaceRight", {
        set: function (spaceRight) {
            this.spaceRight = spaceRight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "getSpaceRight", {
        get: function () {
            return this.spaceRight;
        },
        enumerable: true,
        configurable: true
    });
    //添加单元格
    ScrollView.prototype.addItem = function (item) { };
    //获取单元格
    /**
    * 通过索引获取对应的单元格
    * @param index
    */
    ScrollView.prototype.getItemByIndex = function (index) {
        return this.cells[index];
    };
    /**
     * 根据单元格获取单元格的位置
     * @param cell
     */
    ScrollView.prototype.getItemIndex = function (cell) {
        for (var i = 0; i < this.cells.length; i++) {
            if (cell == this.cells[i]) {
                return i;
            }
        }
        return -1;
    };
    /**
     * 单元格响应事件
     */
    ScrollView.prototype.onCellEvent = function (event, cell) {
        var index = this.getItemIndex(cell);
        if (index == -1) {
            return;
        }
        if (this.selectHandler) {
            this.selectHandler.runWith([event, index]);
        }
    };
    //实现接口,初始化所有单元格
    ScrollView.prototype.initItems = function () {
        if (!this.haveInitItem && this.itemRender != null && this.array != null && this.array.length > 0) {
            this.cells = new Array();
            for (var i = 0; i < this.array.length; i++) {
                var item = new this.itemRender(this.cellWidth, this.cellHeight);
                if (this.array[i] instanceof Laya.Sprite || this.array[i] instanceof Laya.Box || this.array[i] instanceof Laya.Image) { //如果是其原型，则添加为子对象
                    item.addChild(this.array[i]);
                }
                else if (this.array[i] instanceof String || this.array[i] instanceof Number || this.array[i] instanceof Boolean) {
                    item.custom = this.array[i]; //自定义属性
                }
                this.cells.push(item);
                this.addChild(item);
            }
            this.haveInitItem = true;
            //调用刷新单元格位置
            this.refreshCellsPos();
        }
    };
    /**
    * 所有单元格执行渲染
    */
    ScrollView.prototype.initRender = function () {
        if (!this.haveRender && this.renderHandler != null && this.array != null && this.array.length > 0) {
            for (var i = 0; i < this.array.length; i++) {
                this.renderHandler.runWith([this.cells[i], i]);
            }
            this.haveRender = true;
        }
    };
    /**
    * 刷新ScrollView下Cell的位置
    */
    ScrollView.prototype.refreshCellsPos = function () {
        var cellCount = this.cells.length;
        for (var i = 0; i < cellCount; i++) {
            var cell = this.cells[i];
            var posX = this.getCellPosByIndex(i);
            var posY = cell.height;
            cell.pos(posX, posY / 2);
        }
        this.width = this.spaceLeft + cellCount * this.cellWidth + (cellCount - 1) * this.space + this.spaceRight;
    };
    /**
     * 单个单元格执行渲染
     */
    ScrollView.prototype.doSingleRender = function (index) {
        if (!this.haveRender) {
            this.initRender();
            return;
        }
        if (this.renderHandler != null) {
            this.renderHandler.runWith([this.cells[index], index]);
        }
    };
    /**
    * 根据单元格索引获取单元格位置
    * @param index
    */
    ScrollView.prototype.getCellPosByIndex = function (index) {
        return this.spaceLeft + (index + 0.5) * this.cellWidth + index * this.space;
    };
    //鼠标操作事件
    ScrollView.prototype.mouseDown = function () {
        if (this.mouseHandler != null) {
            var e = new Event(Laya.Event.MOUSE_DOWN);
            this.mouseHandler.runWith([e]);
        }
    };
    /**
     * 鼠标离开屏幕
     */
    ScrollView.prototype.mouseUp = function (event) {
        if (this.mouseHandler != null) {
            var e = new Event(Laya.Event.MOUSE_UP);
            this.mouseHandler.runWith([e]);
        }
    };
    /**
     * 鼠标移动
     */
    ScrollView.prototype.mouseMove = function () {
        if (this.mouseHandler != null) {
            var e = new Event(Laya.Event.MOUSE_MOVE);
            this.mouseHandler.runWith([e]);
        }
    };
    return ScrollView;
}(Laya.Box));
exports.default = ScrollView;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
